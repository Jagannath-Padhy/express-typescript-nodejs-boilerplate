[
    {
      "question": "What is the purpose of the LiveData class in Android architecture?",
      "answers": [
        "To define the app's user interface",
        "To manage application resources",
        "To hold and observe data changes in a lifecycle-aware way",
        "To perform background tasks"
      ],
      "questionId": "0",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [2]
    },
    {
      "question": "What is Dagger in Android development?",
      "answers": [
        "A database management tool",
        "A dependency injection framework",
        "A UI testing framework",
        "A layout manager"
      ],
      "questionId": "1",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [1]
    },
    {
      "question": "What is ProGuard in Android?",
      "answers": [
        "A tool for code obfuscation and shrinking",
        "A tool for memory management",
        "A tool for UI design",
        "A tool for network monitoring"
      ],
      "questionId": "2",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "What is the purpose of the Parcelable interface in Android?",
      "answers": [
        "To allow an object to be passed between activities or fragments efficiently",
        "To manage the application's database schema",
        "To handle user authentication",
        "To perform animations"
      ],
      "questionId": "3",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "What is the purpose of the JobIntentService in Android?",
      "answers": [
        "To perform background tasks that require access to the main thread",
        "To schedule background tasks",
        "To manage user authentication",
        "To provide location-based services"
      ],
      "questionId": "4",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [1]
    },
    {
      "question": "What is the purpose of the Test Orchestrator in Android testing?",
      "answers": [
        "To perform background tasks",
        "To run UI tests on multiple devices in parallel",
        "To manage application resources",
        "To define the app's user interface"
      ],
      "questionId": "5",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [1]
    },
    {
      "question": "What is the purpose of the Room Database Inspector in Android Studio?",
      "answers": [
        "To manage background tasks",
        "To define the app's user interface",
        "To provide location-based services",
        "To view and modify the contents of an app's Room database"
      ],
      "questionId": "6",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [3]
    },
    {
      "question": "What is the purpose of the MotionLayout in Android?",
      "answers": [
        "To create complex animations and transitions",
        "To manage application resources",
        "To define the app's user interface",
        "To perform background tasks"
      ],
      "questionId": "7",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "What is the purpose of the LiveDataReactiveStreams library in Android?",
      "answers": [
        "To manage application permissions",
        "To define the app's user interface",
        "To provide reactive programming support for LiveData",
        "To perform animations"
      ],
      "questionId": "8",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [2]
    },
    {
      "question": "What is a Dispatcher in Kotlin Coroutines?",
      "answers": [
        "A mechanism for controlling database access",
        "An element used for handling UI events",
        "A way to specify the thread on which a coroutine should run",
        "A class for managing background tasks"
      ],
      "questionId": "9",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [2]
    },
    {
      "question": "What is structured concurrency in Kotlin Coroutines?",
      "answers": [
        "A way to ensure that coroutines are launched in a structured manner, and their lifetimes are managed",
        "A way to define complex data structures in coroutines",
        "A way to handle user interactions",
        "A way to define layouts in Android"
      ],
      "questionId": "10",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "Which of the following is not a type of Dependency Injection in Android?",
      "answers": [
        "Constructor Injection",
        "Method Injection",
        "Field Injection",
        "Setter Injection"
      ],
      "questionId": "11",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [3]
    },
    {
      "question": "What is scoping in Dagger for Dependency Injection?",
      "answers": [
        "A technique for controlling the lifecycle of dependencies",
        "A way to define the layout of an Android app",
        "A method for managing database schemas",
        "A type of animation in Android"
      ],
      "questionId": "12",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "What is Constructor Chaining in Dagger for Dependency Injection?",
      "answers": [
        "A way to pass dependencies from one class to another through constructor parameters",
        "A method for managing database operations",
        "A technique for defining UI layouts",
        "A method for handling network requests"
      ],
      "questionId": "13",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "What is Lazy Loading in the context of Dependency Injection?",
      "answers": [
        "A way to manage user interface components",
        "A technique for handling network requests",
        "A method for defining database schemas",
        "Deferring the creation of an object until it is first requested"
      ],
      "questionId": "14",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [3]
    },
    {
      "question": "What is the time complexity of finding the shortest path in an unweighted graph using breadth-first search (BFS)?",
      "answers": [
        "O(V)",
        "O(V + E)",
        "O(E)",
        "O(log V)"
      ],
      "questionId": "15",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [1]
    },
    {
      "question": "In a binary search tree, what is the maximum number of nodes possible in a tree with height 'h'?",
      "answers": [
        "2^h",
        "2^(h+1) - 1",
        "h^2",
        "h!"
      ],
      "questionId": "16",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "Which sorting algorithm has the best average-case time complexity?",
      "answers": [
        "Quick Sort",
        "Merge Sort",
        "Bubble Sort",
        "Selection Sort"
      ],
      "questionId": "17",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [1]
    },
    {
      "question": "Which data structure is typically used to implement a priority queue?",
      "answers": [
        "Heap",
        "Linked List",
        "Stack",
        "Queue"
      ],
      "questionId": "18",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "In a hash table, what is the average-case time complexity for searching an element?",
      "answers": [
        "O(n^2)",
        "O(log n)",
        "O(n)",
        "O(1)"
      ],
      "questionId": "19",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [3]
    },
    {
      "question": "According to the Single Responsibility Principle (SRP), a class should have only one reason to...",
      "answers": [
        "Be instantiated",
        "Contain methods",
        "Exist",
        "Have a constructor"
      ],
      "questionId": "20",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [3]
    },
    {
      "question": "The Open-Closed Principle (OCP) suggests that software entities (e.g., classes, modules) should be open for extension but...",
      "answers": [
        "Closed for modification",
        "Closed for instantiation",
        "Closed for compilation",
        "Closed for testing"
      ],
      "questionId": "21",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "The Dependency Inversion Principle (DIP) states that high-level modules should not depend on low-level modules, but both should depend on...",
      "answers": [
        "Interfaces",
        "Abstractions",
        "Implementations",
        "Data structures"
      ],
      "questionId": "22",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [1]
    },
    {
      "question": "Which SOLID principle encourages developers to use polymorphism to decouple components in a system?",
      "answers": [
        "Dependency Inversion Principle (DIP)",
        "Interface Segregation Principle (ISP)",
        "Liskov Substitution Principle (LSP)",
        "Open-Closed Principle (OCP)"
      ],
      "questionId": "23",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "According to the Open-Closed Principle (OCP), what should be the primary focus when extending the behavior of a system?",
      "answers": [
        "Adding new functionality by extending existing classes or modules",
        "Modifying existing code directly to incorporate new features",
        "Rewriting the entire system from scratch",
        "Removing unnecessary features to simplify the codebase"
      ],
      "questionId": "24",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "Which feature of OOPS described the reusability of code?",
      "answers": [
        "Abstraction",
        "Encapsulation",
        "Polymorphism",
        "Inheritance"
      ],
      "questionId": "25",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [3]
    },
    {
      "question": "Which of the following statement of a program is not right?",
      "answers": [
        "class teacher{ }; teacher s[5]",
        "class teacher{ }s",
        "class teacher{ }; teacher s",
        "class teacher{ }s[]"
      ],
      "questionId": "26",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [3]
    },
    {
      "question": "Which keyword is used to indicate that a class cannot be inherited by any other class?",
      "answers": [
        "final",
        "abstract",
        "sealed",
        "static"
      ],
      "questionId": "27",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
      "question": "What is the output of the following Java program?\n\n```\nclass Parent {\n    String name = \"parent\";\n    String message() {\n        return \"from parent\";\n    }\n}\n\nclass Child extends Parent {\n    String name = \"child\";\n    String message() {\n        return \"from child\";\n    }\n}\n\npublic class Main {\n    public static void main(String[] args) {\n        Parent p = new Child();\n        System.out.println(p.name + \" \" + p.message());\n    }\n}\n```",
      "answers": [
        "parent from parent",
        "child from child",
        "parent from child",
        "child from parent"
      ],
      "questionId": "28",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [2]
    },
    {
      "question": "Which of the following is not an activity lifecycle callback method?",
      "answers": [
        "onClick() method",
        "onCreate() method",
        "onStart() method",
        "onBackPressed() method"
      ],
      "questionId": "29",
      "questionType": "singlechoice",
      "questionCategory": "Android",
      "key": [0]
    },
    {
        "question": "Which of the following method is used by services to clean up any services?",
        "answers": [
        "onStop() method",
        "stopService() method",
        "onDestroy() method",
        "stopSelf() method"
        ],
        "questionId": "30",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [2]
    },
    {
        "question": "Why is `sendStickyBroadcast(intent)` used?",
        "answers": [
        "To show intent is prioritized",
        "To show intent is optional",
        "To show intent is sticky",
        "None"
        ],
        "questionId": "31",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [2]
    },
    {
        "question": "While making any network call, if the UI begins to crash or behave sluggishly, it is most likely because of:",
        "answers": [
        "Network latency",
        "Too many activities on the Activity Manager",
        "Hardware malfunctions",
        "Virus on the available Server"
        ],
        "questionId": "32",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [1]
    },
    {
        "question": "To build a GridView containing 3 columns, which of the following attribute will you use?",
        "answers": [
        "android:columnCount = '3'",
        "android:spanColumns = '3'",
        "android:numColumns = '3'",
        "None of these"
        ],
        "questionId": "33",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [2]
    },
    {
        "question": "How many types of Gradle Build files do we have in Android?",
        "answers": [
        "1",
        "2",
        "3",
        "4"
        ],
        "questionId": "34",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [1]
    },
    {
        "question": "Which among the following intent action helps us in sending email through Android?",
        "answers": [
        "ACTION_SEND",
        "ACTION_MAIL",
        "ACTION_EMAIL",
        "None of these"
        ],
        "questionId": "35",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [0]
    },
    {
        "question": "Suppose you are designing an EditText to take the password as input. You wish to have a password toggle icon at the extreme right of the EditText. Which of the following attribute will help you in doing so",
        "answers": [
        "drawableRight",
        "drawableLeft",
        "iconRight",
        "iconLeft"
        ],
        "questionId": "36",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [0]
    },
    {
        "question": "Which of the following are different storage methods available in Android? 1) Shared Preferences 2) Internal Storage 3) External Storage 4) SQLite Databases 5) Network Connection 6)Intermediate storage",
        "answers": [
        "1,2,3,4,6",
        "2,3,4,5,6",
        "1,2,3,4,5",
        "All of the above"
        ],
        "questionId": "37",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [3]
    },
    {
        "question": "Which of the following is not a way to create a new thread in an Android app?",
        "answers": [
        "Using the Thread class",
        "Using the AsyncTask class",
        "Using the Handler class",
        "Using the Runnable interface"
        ],
        "questionId": "38",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [3]
    },
    {
        "question": "What is the keyword used to define an extension function in Kotlin?",
        "answers": [
        "extend",
        "fun",
        "operator",
        "infix"
        ],
        "questionId": "39",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [1]
    },
    {
        "question": "____________ feature allows removing the risk of occurrence of NullPointerException in real time.",
        "answers": [
        "Null Risk",
        "Null Safety",
        "Null Pointer",
        "All of the above"
        ],
        "questionId": "40",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [1]
    },
    {
        "question": "Does Kotlin support primitive Datatypes?",
        "answers": [
        "Yes",
        "No",
        "Can be yes or no",
        "Can not say"
        ],
        "questionId": "41",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [1]
    },
    {
        "question": "Which keyword is used to create a singleton in Kotlin?",
        "answers": [
        "static",
        "singleton",
        "single",
        "object"
        ],
        "questionId": "42",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [3]
    },
    {
        "question": "What is the primary use of the with function in Kotlin?",
        "answers": [
        "To create an extension function",
        "To apply multiple transformations to a collection",
        "To establish a scope in which an object's properties and functions can be accessed directly without specifying the object's name",
        "To create an anonymous function"
        ],
        "questionId": "43",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [2]
    },
    {
        "question": "What will be the output of the following code?\n\n```\nfun main() {\n    val list = listOf(1, 2, 3, 4, 5)\n    val result = list.map { it * 2 }\n    println(result)\n}\n```",
        "answers": [
        "[1, 2, 3, 4, 5]",
        "[2, 4, 6, 8, 10]",
        "[1, 4, 9, 16, 25]",
        "2, 4, 6, 8, 10"
        ],
        "questionId": "44",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [1]
    },
    {
        "question": "What will be the output of the following code?\n\n```\nfun main() {\n    var x = 10\n    x += 5\n    println(x)\n}\n```",
        "answers": [
        "15",
        "10",
        "14",
        "5"
        ],
        "questionId": "45",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [0]
    },
    {
        "question": "What is the correct set of component classes needed to implement a RecyclerView of items that displays a list of widgets vertically?",
        "answers": [
        "RecycleView\nRecyclerView.Adapter<T extends BaseAdapter>\nRecyclerView.ViewHolder<T extends BaseViewHolder>\nLinearLayoutManager",
        "RecycleView\nRecyclerView.Adapter\nRecyclerView.ViewHolder<T extends BaseViewHolder>\nLinearLayoutManager",
        "RecycleView\nRecyclerView.Adapter\nRecyclerView.ViewHolder\nLinearLayoutManager",
        "RecycleView\nRecyclerView.Adapter<VH extends ViewHolder>\nRecyclerView.ViewHolder\nLinearLayoutManager"
        ],
        "questionId": "46",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [0]
    },
    {
        "question": "Given the fragment below, how would you get access to a TextView with an ID of text_home contained in the root layout file of a Fragment class?\n\nprivate lateinit var textView: TextView\noverride fun onCreateView(...): View? {\n    val root = inflator.inflator(R>layout.fragment_home, container, false)\n    textView = ??\n    return root\n}",
        "answers": [
        "root.getById(R.id.text_home)",
        "findViewByID(R.id.text_home)",
        "root.findViewById(R.id.text_home)",
        "root.find(R.id.text_home)"
        ],
        "questionId": "47",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [2]
    },
    {
        "question": "What folder should you use for your app’s launcher icons?",
        "answers": [
        "/drawable",
        "/icon",
        "/mipmap",
        "/launcher"
        ],
        "questionId": "48",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [2]
    },
    {
        "question": "You want to allow users to take a picture in your app. Which code snippet is the correct approach?",
        "answers": [
        "fun showCamera(view: View) {\n  Log.i(TAG, 'Show camera button pressed.')\n  if (ContextCompat.shouldShowRequestPermissionRationale(thisActivity,\n  Manifest.permission.CAMERA) {\n    showCameraPreview()\n  }\n   else {\n     requestPermissionLauncher.launch(Manifest.permission.CAMERA)\n   }\n}",
        "fun showCamera(view: View) {\n  Log.i(TAG, 'Show camera button pressed.')\n  if (ContextCompat.checkSelfPermission(thisActivity,\n  Manifest.permission.CAMERA)\n  == PackageManager.PERMISSION_GRANTED) {\n    showCameraPreview()\n  }\n  else {\n     requestPermissionLauncher.launch(Manifest.permission.CAMERA)\n  }\n}",
        "fun showCamera(view: View) {\n  Log.i(TAG, 'Show camera button pressed.')\n  showCameraPreview()\n}",
        "fun showCamera(view: View) {\n  Log.i(TAG, 'Show camera button pressed.')\n  if (ContextCompat.checkSelfPermission(thisActivity,\n  Manifest.permission.CAMERA)\n  != PackageManager.PERMISSION_GRANTED) {\n     showCameraPreview()\n   }\n   else {\n      requestPermissionLauncher.launch(Manifest.permission.CAMERA)\n   }\n}"
        ],
        "questionId": "49",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [1]
    },
    {
        "question": "What is the correct recommended way to handle long-running background tasks?",
        "answers": [
        "WorkManager",
        "AsyncTask",
        "IntentService",
        "Thread"
        ],
        "questionId": "50",
        "questionType": "singlechoice",
        "questionCategory": "Android",
        "key": [0]
    }
]
      
  